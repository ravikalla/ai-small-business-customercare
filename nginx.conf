# Load Balancer Configuration for Multi-Business SBC
# Author: Ravi Kalla <ravi2523096+sbc@gmail.com>

events {
    worker_connections 1024;
}

http {
    upstream sbc_pizza {
        server sbc-pizza-palace:3000;
    }
    
    upstream sbc_coffee {
        server sbc-coffee-shop:3000;
    }
    
    upstream sbc_restaurant {
        server sbc-restaurant:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    
    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen 80;
        server_name sbc-system.local;
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;

        # Apply rate limiting
        limit_req zone=api_limit burst=20 nodelay;

        # Pizza Palace Routes
        location /pizza/ {
            rewrite ^/pizza/(.*) /$1 break;
            proxy_pass http://sbc_pizza;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Coffee Shop Routes
        location /coffee/ {
            rewrite ^/coffee/(.*) /$1 break;
            proxy_pass http://sbc_coffee;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Restaurant Routes
        location /restaurant/ {
            rewrite ^/restaurant/(.*) /$1 break;
            proxy_pass http://sbc_restaurant;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Business-specific API routing based on business ID in URL
        location ~ ^/api/business/([^/]+)/(.*) {
            set $business_id $1;
            set $api_path $2;
            
            # Route based on business ID
            if ($business_id ~ "^pizza") {
                rewrite ^/api/business/[^/]+/(.*) /api/$1 break;
                proxy_pass http://sbc_pizza;
            }
            if ($business_id ~ "^coffee") {
                rewrite ^/api/business/[^/]+/(.*) /api/$1 break;
                proxy_pass http://sbc_coffee;
            }
            if ($business_id ~ "^restaurant") {
                rewrite ^/api/business/[^/]+/(.*) /api/$1 break;
                proxy_pass http://sbc_restaurant;
            }
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Business-ID $business_id;
        }

        # Default route for customer queries
        location /api/customer/ {
            # Extract business ID from query parameter or header
            proxy_pass http://sbc_pizza; # Default to first business
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Health check endpoint
        location /health {
            return 200 "Multi-Business SBC System Running\n";
            add_header Content-Type text/plain;
        }

        # Static files and dashboard
        location / {
            return 200 "Small Business Customer Care - Multi-Business System";
            add_header Content-Type text/plain;
        }
    }
}