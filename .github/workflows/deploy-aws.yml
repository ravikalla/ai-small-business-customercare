name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual deployment

env:
  NODE_VERSION: '18'
  APP_DIR: '/var/www/sbc-system'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: |
        # Create a simple test to verify the app starts
        timeout 30s npm start &
        sleep 10
        curl http://localhost:3000/health || exit 1
        pkill -f "node.*src/index.js"

    - name: Pre-deployment Checks
      run: |
        echo "üîç Pre-deployment checks..."
        echo "Target Host: ${{ secrets.EC2_HOST }}"
        echo "Username: ${{ secrets.EC2_USERNAME }}"
        echo "Port: ${{ secrets.EC2_SSH_PORT }}"
        
        echo "Testing network connectivity..."
        if timeout 10 bash -c "cat < /dev/null > /dev/tcp/${{ secrets.EC2_HOST }}/22" 2>/dev/null; then
          echo "‚úÖ Port 22 is reachable"
        else
          echo "‚ùå Cannot connect to port 22 on ${{ secrets.EC2_HOST }}"
          echo ""
          echo "üö® DEPLOYMENT WILL FAIL - Common fixes:"
          echo "1. Check EC2 Security Group allows SSH (port 22) from 0.0.0.0/0"
          echo "2. Verify EC2 instance is running"
          echo "3. Confirm EC2_HOST secret contains PUBLIC IP address"
          echo "4. Check Network ACLs if security group is correct"
          echo ""
          echo "See troubleshoot-deployment.md for detailed instructions"
        fi
      continue-on-error: true

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        timeout: 60s
        command_timeout: 15m
        debug: true
        script: |
          # Navigate to application directory
          cd ${{ env.APP_DIR }}
          
          # Pull latest changes
          echo "üì• Pulling latest changes from GitHub..."
          git pull origin main
          
          # Install/update dependencies
          echo "üì¶ Installing dependencies..."
          npm install --production
          
          # Update environment variables if needed
          if [ ! -f .env ]; then
            echo "‚ö†Ô∏è .env file not found. Creating from template..."
            cp .env.example .env
            echo "üîê Please update .env file with your API keys"
          fi
          
          # Restart application with PM2
          echo "üîÑ Restarting application..."
          pm2 restart sbc-system || pm2 start ecosystem.config.js --env production
          
          # Save PM2 configuration
          pm2 save
          
          # Check application health
          echo "üè• Checking application health..."
          sleep 5
          if curl -f http://localhost:3000/health > /dev/null 2>&1; then
            echo "‚úÖ Application is healthy"
            pm2 status
          else
            echo "‚ùå Health check failed"
            pm2 logs sbc-system --lines 20
            exit 1
          fi
          
          # Restart Nginx if needed
          echo "üåê Checking Nginx..."
          sudo nginx -t && sudo systemctl reload nginx
          
          echo "üéâ Deployment completed successfully!"

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "‚úÖ Deployment to AWS EC2 completed successfully"
        else
          echo "‚ùå Deployment to AWS EC2 failed"
        fi